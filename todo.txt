* Stats:
  * Focus on stats for Scientific Data paper
  * ElecMeter.plot() and MeterGroup.plot() - how to select time? `load_kwargs`?
  * goodsectionsresults could do with a plotting function like
    plot_missing_samples_with_rectangles
  * check proportion_of_energy_submetered agrees with v0.1 for REDD
  * implement energy_per_meter
  * implement dropout_rate stats node (and think about how
    dropout_rate_per_period would work... supposedly we tell the loader
    to load small chunks (e.g. 1 minute) and then we just need to teach
    dropout_rate_results to plot like plot_missing_samples_with_bitmap.
  * implement on durations (make sure it can work with metrics)
  * activity distribution
  * building.describe() and dataset.describe()

* Metrics
  * TODO in combinatorial_optimisation (mostly metadata IIRC)

Docs
* New features (see email I sent to nipun and oli)
* Convert dataset (point to how to write your own dataset converter)
* Preprocessing
  * to fill appliance gaps:
    - get good sections
    - load only good sections
    - then use Apply with pd.ffill
    - done!
* Using MeterGroup to select meters.
* Pipeline nodes have get_X functions for operating on a vanilla
  dataframe (using NILMTK column names).
* nilmtk.global_meter_group
* re-run sphinx-apidoc

Blog
* Background to NILMTK v0.2 (going on holiday)
* Future: high freq, metrics, better algos, Hart's stuff, more tests,
more importers, WikiEnergy importer...

Release
* remove NotImplemented functions
* change nilmtk.github.io.  Remove "Import 6 public data sets" and
change image. Remove FHMM
* Master's docs:
  * Modify master's docs/Makefile so it sends HTML to nilmtk/v0.1.x/
  * Add Metrics
  * Copy over 'contributing' to v0.2 branch
* Tag master with v0.1.1
* Merge develop into master
* Tag with v0.2
* Delete develop
* Go through issue queue and close irrelevant issues
* Tweet and mention on mailing list.  Also email:
  * Simon (he could use NILMTK?)
  * Zico
  * Mark Taylor
  * SmartB
  * Navetas
  * Update recent issues where I said 'wait for NILMTK v0.2'

Add to todo on wiki:

* train_test_split (see nilmtk.cross_validation.train_test_split in v0.1)
* load only required measurements
* automatically decide size of chunk
* Do we still need Hashable?  Try making ElecMeter and Appliance
  inherit from Object.
* stats.totalenergy._energy_for_chunk looks wasteful. Why not, for
  each AC type, find cumulative energy > energy > power and then
  only run _energy_for_power_series on one column per AC type.
* FHMM (Nipun might do this)

